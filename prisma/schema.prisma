// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profiles {
  id Int @id @default(autoincrement())
  userId String
  email     String
  name      String?
  introduce String?
  avatar_url String?
}

model Objective {
  id Int @id @default(autoincrement())
  title String
  description String
  deadline DateTime
  isAchievement Boolean @default(false)
  achievementDay DateTime?
  userId String
  createdAt DateTime @default(now())
  reviews Review[]
  todos Todo[]
}

model Review {
  id Int @id @default(autoincrement())
  good String
  more String
  challenge String
  day DateTime @default(now())
  createdAt DateTime @default(now())
  objective Objective @relation(fields: [objectiveId], references: [id])
  objectiveId Int
}

model Todo {
  id Int @id @default(autoincrement())
  description String
  deadline DateTime @default(now())
  isAchievement Boolean @default(false)
  achievementDay DateTime?
  createdAt DateTime @default(now())
  objective Objective @relation(fields: [objectiveId], references: [id])
  objectiveId Int
}

model DailyQuest {
  id Int @id @default(autoincrement())
  title String
  description String
  day DateTime
  isAchievement Boolean @default(false)
  achievementDay DateTime?
  userId String
  createdAt DateTime @default(now())
  dailyreviews DailyReview[]
}

model DailyReview {
  id Int @id @default(autoincrement())
  good String
  more String
  challenge String
  level Int
  qol Int
  createdAt DateTime @default(now())
  dailyQuest DailyQuest @relation(fields: [dailyQuestId], references: [id], onDelete: Cascade)
  dailyQuestId Int
}
